name: build

on:
  #master branşına push ve pull_request atıldığı zaman bu aracı çalıştır
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  #manuel olarak istediğimiz zaman bu aracı çalıştırabilmemizi sağlar
  workflow_dispatch:

jobs:
  semgrep:
    name: semgrep
    runs-on: ubuntu-latest
    container:
      #kullanılacak imajı giriyoruz
      image: returntocorp/semgrep
    steps:
    - name: FetchSourceCode
      uses: actions/checkout@v3
    - name: Semgrep
      #taramaları gerçekleştirip sarif dosyası olarak output ediyoruz
      #true => tarama yaptıktan sonra programı kıracak şekilde kritik zaafiyet bulsa da raporlamayı devam ettiriyoruz
      run: semgrep -ci --config=auto --sarif --output=semgrep.sarif || true
    - name: Upload
      #codeql action'ına sarif dosyasını upload etmek için kullandığımız plugin
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: semgrep.sarif
      if: always()
  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
          GITLEAKS_ENABLE_SUMMARY: true #hassas bilgileri gizli bir şekilde işlemek için kullanılır
          GITLEAKS_REDACT: true
        continue-on-error: true
  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    name: trivy
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
